# Post release step which appends the relevant VSIX to each release (per tag).
name: post-release-upload-vsix
on:
  push:
    # Note we must specify a tag for each pkg containing a vsix file.
    # This includes any **new** vsix producing packages...
    tags:
      - "app-studio-remote-access@[0-9]+.[0-9]+.[0-9]+"
      - "app-studio-toolkit@[0-9]+.[0-9]+.[0-9]+"
      - "app-studio-toolkit-themes@[0-9]+.[0-9]+.[0-9]+"
      - "vscode-dependencies-validation@[0-9]+.[0-9]+.[0-9]+"
      - "vscode-deps-upgrade-tool@[0-9]+.[0-9]+.[0-9]+"
jobs:
  upload-vsix:
    runs-on: ubuntu-latest
    steps:
      # using `v1` because of: https://github.com/actions/checkout/issues/246
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        # pnpm version from package.json `packageManager` field is used
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run ci

      - uses: actions/github-script@v6
        id: path-of-vsix-to-upload
        with:
          script: |
            const verNameRegex = /refs\/tags\/(@\w+\/)?(?<pkgName>[a-z][a-z0-9-]+)@(?<pkgVer>\d+\.\d+\.\d+)/;
            const { groups: { pkgName, pkgVer } } = verNameRegex.exec(process.env.GITHUB_REF);
            return `${pkgName}/${pkgName}-${pkgVer}.vsix`;
          result-encoding: string

      - name: Create Github Release
        uses: softprops/action-gh-release@v2
        with:
          files: packages/${{steps.path-of-vsix-to-upload.outputs.result}}
          fail_on_unmatched_files: true
